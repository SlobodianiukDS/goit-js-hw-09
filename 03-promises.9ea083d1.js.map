{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAeC,SAASC,cAAe,uBACvCC,EAAcF,SAASC,cAAe,sBACtCE,EAAgBH,SAASC,cAAe,wBACxCG,EAAcJ,SAASC,cAAe,UAE5CG,EAAYC,iBAAkB,SAK9B,SAAuBC,GACrBA,EAAEC,iBACFH,EAAYI,YAAe,gBAEjB,KADVC,GAAK,GAEHC,EAASC,YAAW,WAEX,IAAHC,EAAiB,EACrBC,EAAQC,aAAY,WAuB1B,IAAuBC,EAAUC,EArBrBJ,EAAiBT,EAAcc,OAqBpBF,EApBbH,GAAkB,EAoBKI,EAnBOd,EAAYe,MAoB5BC,KAAKC,SAAW,GAEpCC,EAAAvB,GAASwB,OAAOC,QAAQ,qBAAoCC,OAAfR,EAAS,QAAYQ,OAANP,EAAM,OAElEI,EAAAvB,GAASwB,OAAOG,QAAQ,oBAAmCD,OAAfR,EAAS,QAAYQ,OAANP,EAAM,QAtB3DS,MAEDvB,EAAYe,SACdlB,EAAakB,OAEhBQ,OAtBJ,IAAIhB,EAAI,EACJC,EAAS,KACTG,EAAQ,KAwBZ,SAASY,IACPC,aAAahB,GACbiB,cAAcd,GACdV,EAAcc,MAAQf,EAAYe,MAAQlB,EAAakB,MAAS,GAChER,EAAI,EACJL,EAAYI,YAAe,mB","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst inputDelayEl = document.querySelector(`input[name=\"delay\"]`);\nconst inputStepEl = document.querySelector(`input[name=\"step\"]`);\nconst inputAmountEl = document.querySelector(`input[name=\"amount\"]`);\nconst btnSubmitEl = document.querySelector(`button`);\n\nbtnSubmitEl.addEventListener(`click`, onMakeMessage);\n\nlet n = 0;\nlet timeID = null;\nlet intID = null;\nfunction onMakeMessage(e) {\n  e.preventDefault();\n  btnSubmitEl.textContent = `Stop promises`;\n  n += 1;\n  if (n === 1) {\n    timeID = setTimeout(() => {\n      // console.log(`работаю`);\n      let namberInterval = 0;\n      intID = setInterval(() => {\n        // console.log(`инт`);\n        if (namberInterval < inputAmountEl.value) {\n          namberInterval += 1;\n          createPromise(namberInterval, inputStepEl.value);\n        } else {\n          resetCreatePromise();\n        }\n      }, inputStepEl.value);\n    }, inputDelayEl.value);\n  } else {\n    resetCreatePromise();\n  }\n}\n\nfunction resetCreatePromise() {\n  clearTimeout(timeID);\n  clearInterval(intID);\n  inputAmountEl.value = inputStepEl.value = inputDelayEl.value = ``;\n  n = 0;\n  btnSubmitEl.textContent = `Create promises`;\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  }\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$inputDelayEl","document","querySelector","$ce04d3a99e08e73b$var$inputStepEl","$ce04d3a99e08e73b$var$inputAmountEl","$ce04d3a99e08e73b$var$btnSubmitEl","addEventListener","e","preventDefault","textContent","$ce04d3a99e08e73b$var$n","$ce04d3a99e08e73b$var$timeID","setTimeout","namberInterval","$ce04d3a99e08e73b$var$intID","setInterval","position","delay","value","Math","random","$parcel$interopDefault","Notify","success","concat","failure","$ce04d3a99e08e73b$var$resetCreatePromise","clearTimeout","clearInterval"],"version":3,"file":"03-promises.9ea083d1.js.map"}