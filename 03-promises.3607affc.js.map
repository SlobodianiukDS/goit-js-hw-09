{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAeC,SAASC,cAAc,uBACtCC,EAAcF,SAASC,cAAc,sBACrCE,EAAgBH,SAASC,cAAc,wBACvCG,EAAcJ,SAASC,cAAc,UAE3CG,EAAYC,iBAAiB,SAK7B,SAAuBC,GACrBA,EAAEC,iBACFH,EAAYI,YAAc,gBAC1BC,GAAK,EACK,IAANA,EACFC,EAASC,YAAW,KAEX,IAAHC,EAAiB,EACrBC,EAAQC,aAAY,KAuB1B,IAAuBC,EAAUC,EArBrBJ,EAAiBT,EAAcc,OACjCL,GAAkB,EAoBLG,EAnBCH,EAmBSI,EAnBOd,EAAYe,MAAQL,EAoBpCM,KAAKC,SAAW,GAEpCC,EAAAvB,GAASwB,OAAOC,QAAQ,qBAAqBP,QAAeC,OAE5DI,EAAAvB,GAASwB,OAAOE,QAAQ,oBAAoBR,QAAeC,QAtBrDQ,MAEDtB,EAAYe,SACdlB,EAAakB,OAEhBO,OAtBJ,IAAIf,EAAI,EACJC,EAAS,KACTG,EAAQ,KAwBZ,SAASW,IACPC,aAAaf,GACbgB,cAAcb,GACdV,EAAcc,MAAQf,EAAYe,MAAQlB,EAAakB,MAAQ,GAC/DR,EAAI,EACJL,EAAYI,YAAc","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst inputDelayEl = document.querySelector(`input[name=\"delay\"]`);\nconst inputStepEl = document.querySelector(`input[name=\"step\"]`);\nconst inputAmountEl = document.querySelector(`input[name=\"amount\"]`);\nconst btnSubmitEl = document.querySelector(`button`);\n\nbtnSubmitEl.addEventListener(`click`, onMakeMessage);\n\nlet n = 0;\nlet timeID = null;\nlet intID = null;\nfunction onMakeMessage(e) {\n  e.preventDefault();\n  btnSubmitEl.textContent = `Stop promises`;\n  n += 1;\n  if (n === 1) {\n    timeID = setTimeout(() => {\n      // console.log(`работаю`);\n      let namberInterval = 0;\n      intID = setInterval(() => {\n        // console.log(`инт`);\n        if (namberInterval < inputAmountEl.value) {\n          namberInterval += 1;\n          createPromise(namberInterval, inputStepEl.value * namberInterval);\n        } else {\n          resetCreatePromise();\n        }\n      }, inputStepEl.value);\n    }, inputDelayEl.value);\n  } else {\n    resetCreatePromise();\n  }\n}\n\nfunction resetCreatePromise() {\n  clearTimeout(timeID);\n  clearInterval(intID);\n  inputAmountEl.value = inputStepEl.value = inputDelayEl.value = ``;\n  n = 0;\n  btnSubmitEl.textContent = `Create promises`;\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  }\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$inputDelayEl","document","querySelector","$47d4ff9957288465$var$inputStepEl","$47d4ff9957288465$var$inputAmountEl","$47d4ff9957288465$var$btnSubmitEl","addEventListener","e","preventDefault","textContent","$47d4ff9957288465$var$n","$47d4ff9957288465$var$timeID","setTimeout","namberInterval","$47d4ff9957288465$var$intID","setInterval","position","delay","value","Math","random","$parcel$interopDefault","Notify","success","failure","$47d4ff9957288465$var$resetCreatePromise","clearTimeout","clearInterval"],"version":3,"file":"03-promises.3607affc.js.map"}